2022/01/24 유니티 수업

복습
mesh renderer 끄면 보이지 않음


목차
오늘 수업  슈팅게임
총 쏘기, 데미지, 그에 따른 UI 만들기
Prefab

-총알발사하기
만약에 왼쪽 쉬프트 키를 눌렀을때, 총알을 발사한다.
if (input.GetKeyDown(KeyCode.LeftShift)){
  //총알을 발사한다.

}

 

prefab - 게임오브젝트를 계속 만들어놓을 수 없으니 이걸 사용해서 자동생성
gameobject를  Asset에 넣기 그러면 이건 주사위모양으로 보임
그리고 gameobject에 있는걸 삭제하고 다시 aseet에 있는걸 다시 옮기면 됨
이걸 Scene에서 설정을 해주고 override해서 Asset에 있는 거로 해주면 좋다.
그리고 player에 prefab한것을 집언 넣을때 hierachy에 있는 것이 아닌 Asset에 있는 것을 넣어주면 좋다.

총알을 총구에 생성한다.
1. 총알이라는 게임오브젝트를 만든다.
2.총알을 Prefab화한다.
3. 스크립트를 활용하여. 총알을 Hierarchy(Scene)에 생성한다.  
4. 총알의 위치는 플레이어의 위치

소환 instance

이 스크립트가 들어가 있는 게임오브젝트에게 물리적인 힘을 앞 방향으로 주어라.
 if (Input.GetKeyDown(KeyCode.LeftShift))    //방아쇠를 당긴다.
        {
            //총알을 발사한다.

            //1. 총알이라는 게임오브젝트를 만든다. --> 게임오브젝트 변수를 하나 새로 만들어준다.

            //2.총알을 Prefab화한다.
            //3. 스크립트를 활용하여. 총알을 Hierarchy(Scene)에 생성한다. 
            GameObject insBullet = Instantiate(bullet);    //꼭 알아두기 지역변수로 사용한 이유는 여기서만 사용해서 메모리 누수를 막기위해서
            //4. 총알의 위치는 3차원 player 의 위치
            insBullet.transform.position = this.gameObject.transform.position;
            //초알의 앞 방향은 Player = 이 스크립트가 들어가 있는 게임오프브젝틔의 앞 방향이다.
            insBullet.transform.forward = this.gameObject.transform.forward;

            //총알에게 물리적인 힘을 만들어주는 컴포넌트를 추가한다. 그리고 중력때문에 떨어지니 빼줘야한다. 
            Rigidbody rb = insBullet.AddComponent<Rigidbody>();
            rb.useGravity = false;

public class Bullet : MonoBehaviour
{
    Rigidbody rb;
    // Start is called before the first frame update
    void Start()
    {
        //이 스크립트가 들어가 있는 게임오브젝트에게 물리적인 힘을 앞 방향으로 주어라.

        rb = this.gameObject.GetComponent<Rigidbody>();
        rb.AddForce(500 * this.gameObject.transform.forward);
    }

    // Update is called once per frame
    void Update()




체력100 ---> int  health(선언), health = 100(정의), start에서 사용
데미지30
체력0 이면 죽음
만약에 체력이 0보다 이하로 떨어질 시에는 이 스크립트가 들어가 있는 게임오브젝트를 삭제한다.


이 스크립트가 들어가 있는 게임오브젝트는 총알과 충동을 일으킬 시 체력에서 데미지만큼 수치가 감소한다.
충돌 - Trigger, Collision -->슈팅게임에서 triger가 더 나음 collision쓰면 날아가 버릴 수 도 있음.
총알이라는 것을 알기위해 Tag 사용

체력 - 데미지

    int health;
    int damage;
    // Start is called before the first frame update
    void Start()
    {
        health = 100;
        damage = 30;
    }

    // Update is called once per frame
    void Update()
    {
        if (health <= 0)    
        {
            Destroy(this.gameObject);
        }
    }
     private void OnTriggerEnter(Collider other)
    {
        if (other.gameObject.tag == "Bullet")//내가 부딪힌 것이 총알이라면
        {
            health = health - damage;
            print("내 현재 체력은" + health + "입니다.");
        }   
스크립트를 해당 Object에 다 넣어줘야한다.

