2022/02/14 유니티 수업

오늘 할 것
1. 이동 및 점프 하는 애니메이션 삽입하기
2. 총을 쐈을때 이펙트 추가하기(불꽃, 소리)
3. 총알을 맞았을 때 이펙트가 나오도록 설정.


1. 이동 및 점프 하는 애니메이션 삽입하기
-이동이 된다.
-애니메이션이 작동하도록 신호를 넣어준다.
-애니메이션이 작동한다.

Animator를 이루는 구성요소
1. State
- 사각형으로 되어있고, animation을 담아둘 수 있고 재생을 할 수 있다..
- 기본이 되는 State를 설정가능합니다.
- 특별한 State : Entry, AniState, Exit
-Ani State: Parameter같은 조건들이 만족되는 순간 언제든지 실행 됨

2. Transition
- 화살표로 이루어져 있어, State간의 Animation의 흐름을 나타냄

선을 누르고 condition에 넣어줘 animator- parameter에 만들어준 jump를 넣어주자
그리고 player 스크립트에 들어갔을 때 jump를 했을때 애니메이터에 접근을 할 수 있게

public Animator _animator; //선언해주고

if (Input.GetKeyDown(KeyCode.LeftControl))
            {
                _animator.SetTrigger("jump");
                this.gameObject.GetComponent<Rigidbody>().AddForce(this.gameObject.transform.up * 300);
                isGround = false;
            }

점프를 작동하는 코드안에 넣어주자
이로서 점프가 작동할 때 animator가 작동이된다

-isMOve 
run과 wait transition 사이에 설정해 주기
새로운 parameter인 isMove를 bool형식으로 만들어주고 컨디션에 넣어준다.
wait에서 run으로 가는 화살표에는 isMove를 넣고 true를 해준다. 왜냐하면 해당일이 일어나면 jump를 할 수 있도록
반대로 run에서 wait은 false로 설정한다.

if (Input.GetKey(KeyCode.UpArrow))
        {
            _animator.SetBool("isMove", true);
            this.gameObject.transform.Translate(0, 0, 10 * Time.deltaTime);
        }
else
        {
                _animator.SetBool("isMove",false)
        }

-isBackMove

if (Input.GetKey(KeyCode.DownArrow))
        {
            _animator.SetBool("isBackMove", true);
            this.gameObject.transform.Translate(0, 0, -10 * Time.deltaTime);
        }
        else
        {
            _animator.SetBool("isBackMove", false);
        }


**************************************
2. 총을 쐈을때 이펙트 추가하기(불꽃, 소리)

asset store에서 총소리나는 이펙트를 구매후
player에 audio source component를 추가후 audio clip에 원하는 사운들 넣어준다. 
그 후 player스크립트에서

 public AudioSource audiosource; //선언을 해주고

void PlayShootSound()
    {
        audiosource.Play();
    }
함수를 만들고 

playshoot 함수를 총을 쏘는 함수안에 넣어준다.

그 후 inspector. script에 있는  audio source에 player오브젝트를 넣어준다.



//이펙트 총알 날라가는거 만들어주기

1. 이펙트를 소환한다.
2. 소환한 위치를 플레이어의 아래(자식)에 둔다.
3. 위치와 방향을 맞춰준다.


public GameObject shootEffect;
 public Transform effectSpot;


GameObject se = Instantiate(shootEffect, effectSpot);
            se.transform.localPosition = Vector3.zero;
            se.transform.localRotation = Quaternion.identity;

총 이펙트도 에셋 스토어에서 사고 player에 empty gameobject 만들고 그 아래에 넣어주자
BigRookGames에 있는 prefab에 있는 VFX를 넣어주자
script update에 위에 쓴것처럼 넣어주면 
player에 shoot effect, effect spot나오는데 shoot effect엔 VFX prefab을 넣어주고 
effect spot에는 빈 게임오브젝트를 넣어주자 
빈 게임오브젝트는 사전에 위치를 설정해줌으로서 자동적으로 저장되게 한다!